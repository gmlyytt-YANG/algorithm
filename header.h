/*************************************************************************
 *
 * Copyright (c) 2018 liyang. All Rights Reserved
 *
 ************************************************************************/

/*
 * @file header.h
 * @author gmlyytt@outlook.com
 * @date 2018/10/04 18:24:00
 * @brief header of many .hs
 * */

#ifndef INC_1STPROGRAM_HEADER_H
#define INC_1STPROGRAM_HEADER_H

// #include "leetcode_102. Binary Tree Level Order Traversal.h"
// #include "offer_27. Mirror Tree.h"
// #include "offer_36. Binary Tree convert to LInked List.h"
// #include "leetcode_139. Word Break.h"
// #include "common_1. Specific Node in Binary Tree.h"
// #include "common_2. Circle in Linked List.h"
// #include "offer_18. Delete Node in Linked List.h"
// #include "offer_10. Last Common Node in Two Lists.h"
// #include "offer_6. Print List Reversely.h"
// #include "offer_25. Merge Two Ascending List.h"
// #include "offer_22. Find Kth Node To Tail.h"
// #include "offer_34. Find Path.h"
// #include "offer_11. Min in Rotate Array.h"
// #include "offer_56_2. Find Number Appearing Once.h"
// #include "offer_38. Permutation.h"
// #include "common_3. sqrt.h"
// #include "common_5. binary_search.h"
// #include "common_4. merge_K_ordered_list.h"
// #include "common_6. binary_search_tree.h"
// #include "common_7. longest Palindrome Substring.h"
// #include "common_8. palindrome_number.h"
// #include "common_9. palindrome_total_number.h"
// #include "common_10. Linked List Palindrome.h"
// #include "leetcode_2. Add Two Numbers.h"
// #include "common_11. Big Number Multiply.h"
// #include "offer_8. Next Node in BST.h"
// #include "offer_34. Find Path.h"
// #include "offer_56_1. Find Number Appearing Once.h"
// #include "offer_9. Two Stack Queue.h"
// #include "offer_10. Last Common Node in Two Lists.h"
// #include "offer_15. Number of 1s.h"
// #include "offer_16. square.h"
// #include "offer_21. odd before even.h"
// #include "offer_26. sub_tree.h"
// #include "offer_29. print matrix clockwise.h"
// #include "offer_4. find number in ascending matrix.h"
// #include "offer_7. reconstruct binary tree.h"
// #include "offer_33. Valid BST .h"
// #include "offer_31. pop and push .h"
// #include "offer_30. min stack.h"
// #include "offer_39. more than half numbers .h"
// #include "offer_40. minimum K.h"
// #include "offer_54. kth node in bst.h"
// #include "offer_41. stream median .h"
// #include "offer_45. combination array compare.h"
// #include "offer_46. tranlate number to string.h"
// #include "offer_47. maximum value of gifts .h"
// #include "offer_51. inverse pair.h"
// #include "offer_53. missing number in [0, n-1].h"
// #include "offer_53. number equals subscript.h"
// #include "offer_55. balance tree.h"
// #include "offer_57. continuous sequence.h"
// #include "offer_50. appearance only once.h"
// #include "offer_43. frequence of 1.h"
// #include "offer_36. Binary Tree convert to LInked List.h"
// #include "offer_48. longest nonrepeating substr.h"
// #include "offer_5. replace blank.h"
// #include "offer_23. entrance of cycled linked list.h"
// #include "leetcode_79. word search.h"
// #include "offer_53. get number of K .h"
// #include "offer_42. maximum sub array.h"
// #include "leetcode_64. Minimum Path Sum.h"
// #include "common_13. rod cut.h"
// #include "common_14. insert node in rotate list.h"
// #include "common_15. algorithm op toutiao.h"
// #include "common_16. ft y toutiao.h"
// #include "offer_32. print bst.h"
// #include "offer_56_2. Find Number Appearing Once.h"
// #include "offer_18. Delete Node in Linked List.h"
// #include "offer_18. Delete Node in Linked List.h"
// #include "offer_58. left rotate string.h"
// #include "offer_37. serialize tree.h"
// #include "offer_14. cut rope.h"
// #include "offer_13. range of robot.h"
// #include "offer_62. last number in circle.h"
// #include "leetcode_24. swap nodes in pair.h"
// #include "offer_5. replace blank.h"
// #include "offer_68. Latest Ancient of Two Nodes.h"
// #include "offer_63. max profit.h"
// #include "leetcode_92. reverse list 2.h"
// #include "common_17. bag 0 1 .h"
// #include "common_18. combination sum to m.h"
// #include "common_19. longest common substring.h"
// #include "common_20. copy list.h"
// #include "offer_17. 1 to n print.h"
// #include "offer_35. copy list.h"
// #include "common_21. delete comma.h"
// #include "common_22. subsequence.h"
// #include "leetcode_90. subsets II.h"
// #include "common_24. permutation.h"
// #include "common_25. binary search collections.h"
// #include "common_17. bag 0 1 .h"
// #include "leetcode_200. Number of Islands.h"
// #include "leetcode_130. Surrounded Regions.h"
// #include "leetcode/leetcode_886. Possible Bipartition.h"
// #include "leetcode/leetcode_116. Populating Next Right Pointers in Each Node.h"
// #include "leetcode/leetcode_417. Pacific Atlantic Water Flow.h"
// #include "leetcode/leetcode_576. Out of Boundary Paths.h"
// #include "leetcode/leetcode_105. Construct Binary Tree from Preorder and Inorder Traversal.h"
// #include "leetcode/leetcode_106. Construct Binary Tree from Inorder and Postorder Traversal.h"
// #include "leetcode/leetcode_241. Different Ways to Add Parentheses.h"
// #include "leetcode/leetcode_11. Container With Most Water.h"
#include "leetcode/leetcode_16. 3Sum Closest.h"

#endif //INC_1STPROGRAM_HEADER_H
